{
  "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "deployerAddress": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
  "transactionHash": "0x9c4bf545367161b12f20b86e20b8f2fdd6c55bbdc172349a5fdc42c2c797e366",
  "blockNumber": 1,
  "gasUsed": "30000000",
  "timestamp": "2025-09-19T16:55:47.633Z",
  "network": "localhost",
  "contractABI": [
    "constructor()",
    "error AccessControlBadConfirmation()",
    "error AccessControlUnauthorizedAccount(address,bytes32)",
    "error ERC721IncorrectOwner(address,uint256,address)",
    "error ERC721InsufficientApproval(address,uint256)",
    "error ERC721InvalidApprover(address)",
    "error ERC721InvalidOperator(address)",
    "error ERC721InvalidOwner(address)",
    "error ERC721InvalidReceiver(address)",
    "error ERC721InvalidSender(address)",
    "error ERC721NonexistentToken(uint256)",
    "error EnforcedPause()",
    "error ExpectedPause()",
    "event Approval(address indexed,address indexed,uint256 indexed)",
    "event ApprovalForAll(address indexed,address indexed,bool)",
    "event BatchIssued(uint256 indexed,address indexed,string,uint256,string)",
    "event BatchMetadataUpdate(uint256,uint256)",
    "event BatchStatusUpdated(uint256 indexed,uint8,uint8)",
    "event MetadataUpdate(uint256)",
    "event OwnershipTransferred(uint256 indexed,address indexed,address indexed)",
    "event Paused(address)",
    "event RoleAdminChanged(bytes32 indexed,bytes32 indexed,bytes32 indexed)",
    "event RoleGranted(bytes32 indexed,address indexed,address indexed)",
    "event RoleRevoked(bytes32 indexed,address indexed,address indexed)",
    "event ShipmentCreated(uint256 indexed,uint256 indexed,address indexed,address,uint256)",
    "event ShipmentReceived(uint256 indexed,uint256 indexed,address indexed,uint256)",
    "event Transfer(address indexed,address indexed,uint256 indexed)",
    "event Unpaused(address)",
    "function ADMIN_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function DISTRIBUTOR_ROLE() view returns (bytes32)",
    "function MANUFACTURER_ROLE() view returns (bytes32)",
    "function PHARMACY_ROLE() view returns (bytes32)",
    "function addDistributor(address)",
    "function addManufacturer(address)",
    "function addPharmacy(address)",
    "function approve(address,uint256) pure",
    "function balanceOf(address) view returns (uint256)",
    "function batchShipments(uint256,uint256) view returns (uint256)",
    "function batches(uint256) view returns (uint256,(string,string,string,string,string),uint256,uint256,uint256,address,address,uint8,string,bool)",
    "function createShipment(uint256,address,uint256,string) returns (uint256)",
    "function getApproved(uint256) view returns (address)",
    "function getBatchHistory(uint256) view returns (uint256[])",
    "function getOwnerBatches(address) view returns (uint256[])",
    "function getRoleAdmin(bytes32) view returns (bytes32)",
    "function grantRole(bytes32,address)",
    "function hasRole(bytes32,address) view returns (bool)",
    "function isApprovedForAll(address,address) view returns (bool)",
    "function issueBatch((string,string,string,string,string),uint256,uint256,uint256,string) returns (uint256)",
    "function manufacturerBatches(address,uint256) view returns (uint256)",
    "function name() view returns (string)",
    "function ownerBatches(address,uint256) view returns (uint256)",
    "function ownerOf(uint256) view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function qrCodeToBatchId(string) view returns (uint256)",
    "function receiveShipment(uint256)",
    "function renounceRole(bytes32,address)",
    "function revokeRole(bytes32,address)",
    "function safeTransferFrom(address,address,uint256)",
    "function safeTransferFrom(address,address,uint256,bytes)",
    "function setApprovalForAll(address,bool) pure",
    "function shipments(uint256) view returns (uint256,uint256,address,address,uint256,uint256,uint256,uint8,string)",
    "function supportsInterface(bytes4) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenURI(uint256) view returns (string)",
    "function transferFrom(address,address,uint256)",
    "function unpause()",
    "function verifyByQRCode(string) view returns (bool,(uint256,(string,string,string,string,string),uint256,uint256,uint256,address,address,uint8,string,bool),string)",
    "function verifyOwnership(uint256,address) view returns (bool)"
  ]
}